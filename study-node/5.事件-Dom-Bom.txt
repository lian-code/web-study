01-事件高级.pdfx.pdf
注册事件与解绑事件：
        1.传统注册方式:
                button.onclick = function() {
            console.log(11);
        }
        button.onclick = null

        2.方法监听注册方式:
        function fn() {
            console.log(11);
            button.removeEventListener('click', fn) //解绑事件
        }
        button.addEventListener('click', fn) 注册事件    (点击后解绑事件，只能执行一次)
事件对象：跟事件相关的一系列信息数据的集合都在里边，比如：
   1. 谁绑定了这个事件。
   2. 鼠标触发事件的话，会得到鼠标的相关信息，如鼠标位置。
   3. 键盘触发事件的话，会得到键盘的相关信息，如按了哪个键。
   eventTarget.addEventListener('click', function(event) {
 // 这个 event 就是事件对象，我们还喜欢的写成 e 或者 evt 
 }）
       事件对象属性跟方法：
       e.target 返回触发的事件对象
       e.type 返回触发的事件的类型，如click,不带on
       e.preventDafault(防止违约)  阻止默认行为
       e.stopPropagation() 阻止冒泡
 事件委托：巧用冒泡事件，给父亲添加点击事件，点击儿子都会冒泡到父亲，也会执行事件。

    常见鼠标事件:
     onclick 点击触发
     onmouseover 经过触发
     onmouseout 离开触发
     onmouseenter  进入触发（不会冒泡）
     onmouseleave   离开触发（不会冒泡）
     onfocus 获得焦点触发
     onblur 失去焦点触发
     onmousemove 移动即触发
     onmousedown 按下触发
     onmouseup 弹起触发
     contextmenu 右键菜单   》》》
     selectstart 开始选中   》》》
        禁止页面选中文本以及使用右键菜单：
              document.addEventListener('contextmenu', function(e) {
            e.preventDefault();  //禁止页面使用右键菜单
        })
        document.addEventListener('selectstart', function(e) {
            e.preventDefault();  //禁止页面选中文本
        })
鼠标事件对象：
e.clientX 返回鼠标相对浏览器可视区横坐标；
e.clientY 返回鼠标相对浏览器可视区纵坐标；
e.pageX  返回鼠标相对整个页面横坐标;
e.pageY  返回鼠标相对整个页面纵坐标;
e.screenX 返回鼠标相对整个电脑屏幕横坐标;
e.screenY 返回鼠标相对整个电脑屏幕纵坐标;
       常用键盘按键事件：
        onkeydown  任意键盘按键按下触发；
        onkeypress 任意键盘按键按下触发；（不识别功能键）
        onkeyup 任意键盘按键弹起触发；
       键盘按键事件对象：
       e.keyCode()  返回按键的ASCII码
————————————————————————————————
02-DOM.pdfx
获取元素：
   根据选择器获取：var 变量 = document.querySelector(); 获取第一个元素
   根据ID获取：var 变量 = document.getElementById('id'); 获取一个元素
   根据选择器获取：var but = document.querySelectorAll(); 获取元素集合
   根据类名获取：var but = document.getElementsByClassName(); 获取元素集合
   根据标签名获取：var 变量 = document.getElementsByTagName('标签名')；获取元素集合
   获取特殊元素（body,html）: 直接 document.body  ||   document.html
操作元素：
   element.innerText 从起始位置到终止位置的内容, 但它去除 html 标签， 同时空格和换行也会去掉
   element.innerHTML 起始位置到终止位置的全部内容，包括 html 标签，同时保留空格和换行
  表单元素的属性操作：
   type,value,checked,selected,disabled
  样式属性操作：
   element.style  行内样式操作
   element.className   类名样式操作
   js中的样式采取驼峰命名法，比如fontSize;
  自定义属性的操作：
   element.属性 = '值';（设置内置属性值）；
   element.setAttribute;（'属性','值'）；主要设置自定义的属性
   element.removeAttribute（'属性'）；
   element.getAttribute('属性');

节点操作：（利用父子关系获取元素）
   创建添加节点insertAdjacentHTML(position','node');   position有 ：开始的前面(beforebegin);开始的后面(afterbegin);结束的前面(beforeend);结束的后面(afterend);
  节点概述：拥有节点类型（nodeType）,节点名称（nodeName）,节点值（nodeValue）这三个属性；
                    元素节点的nodeType为1，属性节点为2，文本节点为3; 
   父级节点：node.parentNode   (返回最近的父节点，没有则返回null)；
   子级节点：parentNode.children  (返回所有的子元素节点，重点掌握)；第一个节点parentNode.children[0]；最后一个节点parentNode.children[parentNode.children.length - 1];
   兄弟节点：node.previousElementSibling;（返回上一个兄弟节点）。node.nextElementSibling;（返回下一个兄弟节点）。
   创建节点：var 变量 = document.createElement('tagName');
    添加节点：parentNode.appendChild('变量');   添加节点到父元素后边；
                     parentNode.insertBefore('变量',指定子节点);   添加节点到指定子元素前边；
    删除节点：parentNode.removeChild(子节点)；  返回删除的节点；
    复制节点：node.cloneNode()  括号为空或者为false,则是浅拷贝，只复制本身不克隆里边的文本跟子节点；为true则是深拷贝，会复制节点本身跟里边的所有子节点；
DOM重点核心：创建，增，删，改，查，属性操作，事件操作
     创建 document.write; innerHTML; createElement;
     增 appendChild;  insertBefore;
     删 removeChild;
     改 1.修改元素属性： src、href、title等  2. 修改普通元素内容： innerHTML 、innerText  3. 修改表单元素： value、type、disabled等  4. 修改元素样式： style、className
     查 主要是获取元素，父(parentNode),子(children)  
     自定义属性操作  1.setAttribute:设置dom的属性跟属性值     2.getAttribute:得到dom的属性值     3.removeAttribute:移除自定义属性
————————————————————————————————————————————
04-BOM 浏览器对象模型.pdfx.pdf
window对象的常见事件：
   窗口加载事件：1.onload(当页面文档全部执行完毕才出触发) ；
                         2.DOMContentLoaded (仅DOM加载完即执行，不用等待图片加载完毕)
   调整窗口大小事件：onresize (窗口大小调整即触发)；

定时器：1.setTimeout()一次性定时器；
                使用一次性定时器：window.setTimeout(调用函数, [延迟的毫秒数]);
                删除一次性定时器： window.clearTimeout(timeoutID)；
              2.setInterval() 间隔性定时器：
                使用间隔性定时器： window.setInterval(回调函数, [间隔的毫秒数]);
                删除间隔性定时器： window.clearInterval(intervalID);

location(位置)对象：获取或设置窗体的 URL。
         对象的·属性：
               1.location.href   获取或者设置整个URL
               2.location.host    返回域名地址
               3.location.port   返回端口号
               4.location.pathname    返回路径
               5.location.search     返回参数
               6.location.hash    返回片段 #后面内容
          对象的方法：
                1.location.assign()    可以跳转页面
                2.location.replace()    替换当前页面，不留历史记录，不能后退页面
                3.location.reload()     重新加载页面，括号参数为true则强制刷新ctrl+F5;

navigator(导航器)对象：最常用的是userAgent,用来判断用户哪个终端打开的页面

history(历史)对象：与浏览器历史记录进行交互；
                 1.forward()前进功能      2.back()后退功能        3.go(参数)前进后退功能，参数1即前进，-1即后退；


input.select(); 让文本框文字处于选定状态



                
                 


  

   
  

   
